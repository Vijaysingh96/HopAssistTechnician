{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[6], \"react-native\");\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var RNGooglePlacesNative = _reactNative.NativeModules.RNGooglePlaces;\n\n  var RNGooglePlaces = function () {\n    function RNGooglePlaces() {\n      (0, _classCallCheck2.default)(this, RNGooglePlaces);\n    }\n\n    (0, _createClass2.default)(RNGooglePlaces, [{\n      key: \"openAutocompleteModal\",\n      value: function openAutocompleteModal() {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var placeFields = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n        return RNGooglePlacesNative.openAutocompleteModal(_objectSpread({}, RNGooglePlaces.optionsDefaults, {}, options), [].concat((0, _toConsumableArray2.default)(RNGooglePlaces.placeFieldsDefaults), (0, _toConsumableArray2.default)(placeFields)));\n      }\n    }, {\n      key: \"getAutocompletePredictions\",\n      value: function getAutocompletePredictions(query) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        return RNGooglePlacesNative.getAutocompletePredictions(query, _objectSpread({}, RNGooglePlaces.optionsDefaults, {}, options));\n      }\n    }, {\n      key: \"lookUpPlaceByID\",\n      value: function lookUpPlaceByID(placeID) {\n        var placeFields = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n        return RNGooglePlacesNative.lookUpPlaceByID(placeID, [].concat((0, _toConsumableArray2.default)(RNGooglePlaces.placeFieldsDefaults), (0, _toConsumableArray2.default)(placeFields)));\n      }\n    }, {\n      key: \"getCurrentPlace\",\n      value: function getCurrentPlace() {\n        var placeFields = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n        return RNGooglePlacesNative.getCurrentPlace([].concat((0, _toConsumableArray2.default)(RNGooglePlaces.placeFieldsDefaults), (0, _toConsumableArray2.default)(placeFields)));\n      }\n    }]);\n    return RNGooglePlaces;\n  }();\n\n  RNGooglePlaces.optionsDefaults = {\n    type: '',\n    country: '',\n    useOverlay: false,\n    initialQuery: '',\n    useSessionToken: true,\n    locationBias: {\n      latitudeSW: 0,\n      longitudeSW: 0,\n      latitudeNE: 0,\n      longitudeNE: 0\n    },\n    locationRestriction: {\n      latitudeSW: 0,\n      longitudeSW: 0,\n      latitudeNE: 0,\n      longitudeNE: 0\n    }\n  };\n  RNGooglePlaces.placeFieldsDefaults = [];\n\n  var _default = new RNGooglePlaces();\n\n  exports.default = _default;\n});","lineCount":85,"map":[[17,0,2,0],[19,0,4,0],[25,0,6,0],[25,6,6,6,"RNGooglePlacesNative"],[25,26,6,26],[25,29,6,29,"NativeModules"],[25,56,6,43,"RNGooglePlaces"],[25,70,6,0],[27,6,8,6,"RNGooglePlaces"],[27,20],[34,46,31,55],[35,0,31,55],[35,12,31,23,"options"],[35,19,31,55],[35,90,31,33],[35,92,31,55],[36,0,31,55],[36,12,31,37,"placeFields"],[36,23,31,55],[36,94,31,51],[36,96,31,55],[37,0,32,2],[37,15,32,9,"RNGooglePlacesNative"],[37,35,32,29],[37,36,32,30,"openAutocompleteModal"],[37,57,32,9],[37,76,33,6,"RNGooglePlaces"],[37,90,33,20],[37,91,33,21,"optionsDefaults"],[37,106,32,9],[37,112,34,6,"options"],[37,119,32,9],[37,165,35,9,"RNGooglePlaces"],[37,179,35,23],[37,180,35,24,"placeFieldsDefaults"],[37,199,32,9],[37,235,35,48,"placeFields"],[37,246,32,9],[37,249,32,2],[38,0,36,2],[41,49,38,28,"query"],[41,54],[41,56,38,49],[42,0,38,49],[42,12,38,35,"options"],[42,19,38,49],[42,90,38,45],[42,92,38,49],[43,0,39,2],[43,15,39,9,"RNGooglePlacesNative"],[43,35,39,29],[43,36,39,30,"getAutocompletePredictions"],[43,62,39,9],[43,63,39,57,"query"],[43,68,39,9],[43,88,40,15,"RNGooglePlaces"],[43,102,40,29],[43,103,40,30,"optionsDefaults"],[43,118,39,9],[43,124,41,6,"options"],[43,131,39,9],[43,133,39,2],[44,0,43,2],[47,38,45,17,"placeID"],[47,45],[47,47,45,44],[48,0,45,44],[48,12,45,26,"placeFields"],[48,23,45,44],[48,94,45,40],[48,96,45,44],[49,0,46,5],[49,15,46,12,"RNGooglePlacesNative"],[49,35,46,32],[49,36,46,33,"lookUpPlaceByID"],[49,51,46,12],[49,52,46,49,"placeID"],[49,59,46,12],[49,104,46,62,"RNGooglePlaces"],[49,118,46,76],[49,119,46,77,"placeFieldsDefaults"],[49,138,46,12],[49,174,46,101,"placeFields"],[49,185,46,12],[49,188,46,5],[50,0,47,2],[53,40,49,35],[54,0,49,35],[54,12,49,17,"placeFields"],[54,23,49,35],[54,94,49,31],[54,96,49,35],[55,0,50,2],[55,15,50,9,"RNGooglePlacesNative"],[55,35,50,29],[55,36,50,30,"getCurrentPlace"],[55,51,50,9],[55,95,50,50,"RNGooglePlaces"],[55,109,50,64],[55,110,50,65,"placeFieldsDefaults"],[55,129,50,9],[55,165,50,89,"placeFields"],[55,176,50,9],[55,179,50,2],[56,0,51,2],[61,0,8,6,"RNGooglePlaces"],[61,2,8,6,"RNGooglePlaces"],[61,16],[61,17,9,8,"optionsDefaults"],[61,32],[61,35,9,26],[62,0,10,2,"type"],[62,4,10,2,"type"],[62,8,10,6],[62,10,10,8],[62,12,9,26],[63,0,11,2,"country"],[63,4,11,2,"country"],[63,11,11,9],[63,13,11,11],[63,15,9,26],[64,0,12,2,"useOverlay"],[64,4,12,2,"useOverlay"],[64,14,12,12],[64,16,12,14],[64,21,9,26],[65,0,13,2,"initialQuery"],[65,4,13,2,"initialQuery"],[65,16,13,14],[65,18,13,16],[65,20,9,26],[66,0,14,2,"useSessionToken"],[66,4,14,2,"useSessionToken"],[66,19,14,17],[66,21,14,19],[66,25,9,26],[67,0,15,2,"locationBias"],[67,4,15,2,"locationBias"],[67,16,15,14],[67,18,15,16],[68,0,16,3,"latitudeSW"],[68,6,16,3,"latitudeSW"],[68,16,16,13],[68,18,16,15],[68,19,15,16],[69,0,17,3,"longitudeSW"],[69,6,17,3,"longitudeSW"],[69,17,17,14],[69,19,17,16],[69,20,15,16],[70,0,18,3,"latitudeNE"],[70,6,18,3,"latitudeNE"],[70,16,18,13],[70,18,18,15],[70,19,15,16],[71,0,19,3,"longitudeNE"],[71,6,19,3,"longitudeNE"],[71,17,19,14],[71,19,19,16],[72,0,15,16],[72,5,9,26],[73,0,21,2,"locationRestriction"],[73,4,21,2,"locationRestriction"],[73,23,21,21],[73,25,21,23],[74,0,22,3,"latitudeSW"],[74,6,22,3,"latitudeSW"],[74,16,22,13],[74,18,22,15],[74,19,21,23],[75,0,23,3,"longitudeSW"],[75,6,23,3,"longitudeSW"],[75,17,23,14],[75,19,23,16],[75,20,21,23],[76,0,24,3,"latitudeNE"],[76,6,24,3,"latitudeNE"],[76,16,24,13],[76,18,24,15],[76,19,21,23],[77,0,25,3,"longitudeNE"],[77,6,25,3,"longitudeNE"],[77,17,25,14],[77,19,25,16],[78,0,21,23],[79,0,9,26],[79,3],[80,0,8,6,"RNGooglePlaces"],[80,2,8,6,"RNGooglePlaces"],[80,16],[80,17,29,8,"placeFieldsDefaults"],[80,36],[80,39,29,30],[80,41],[82,17,54,15],[82,21,54,19,"RNGooglePlaces"],[82,35,54,15],[82,37]],"functionMap":{"names":["<global>","RNGooglePlaces","RNGooglePlaces#openAutocompleteModal","RNGooglePlaces#getAutocompletePredictions","RNGooglePlaces#lookUpPlaceByID","RNGooglePlaces#getCurrentPlace"],"mappings":"AAA;ACO;CCuB;EDK;CEE;EFK;CGE;EHE;CIE;EJE;CDC"}},"type":"js/module"}]}