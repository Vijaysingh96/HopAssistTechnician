{"dependencies":[{"name":"react-native","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getJavascriptSource = exports.toString = exports.convertToPostMessageString = void 0;\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[0], \"react-native\");\n\n  var convertToPostMessageString = function convertToPostMessageString(obj) {\n    return JSON.stringify(obj, function (key, val) {\n      if (typeof val === \"function\") {\n        return new Function(\"return \" + val.toString());\n      }\n\n      return val;\n    });\n  };\n\n  exports.convertToPostMessageString = convertToPostMessageString;\n\n  var toString = function toString(obj) {\n    if (obj === undefined) return JSON.stringify({});\n    return JSON.stringify(obj, function (key, val) {\n      if (typeof val === \"function\") {\n        return val.toString();\n      }\n\n      return val;\n    });\n  };\n\n  exports.toString = toString;\n\n  var getJavascriptSource = function getJavascriptSource(props) {\n    var OS = _reactNative.Platform.OS;\n    var renderer = \"canvas\";\n    return \"\\n             var chart = echarts.init(document.getElementById('main'), undefined, {renderer: '\" + renderer + \"'});\\n            chart.setOption(parse(decodeURI(\\\"\" + encodeURI(toString(props.option)) + \"\\\")));\\n             setBackgroundColor(\\\"\" + props.backgroundColor + \"\\\");\\n\\n             function setBackgroundColor(color) {\\n                document.getElementById('main').style.backgroundColor = color;\\n              }\\n      \\n              function sendData(data) {\\n                  window.ReactNativeWebView.postMessage(JSON.stringify({\\\"types\\\":\\\"DATA\\\",\\\"payload\\\": data}));\\n              }\\n      \\n              function sendCallbackData(uuid, data) {\\n                  window.ReactNativeWebView.postMessage(JSON.stringify({\\\"types\\\":\\\"CALLBACK\\\", \\\"uuid\\\": uuid, \\\"payload\\\": data}));\\n              }\\n      \\n              function getOS() {\\n                  return \" + OS + \";\\n              }\\n      \\n              function parse (data) {\\n                  return JSON.parse(data, function (key, value) {\\n      \\n                      if (value\\n                          && typeof value === \\\"string\\\"\\n                          && value.substr(0,8) === \\\"function\\\") {\\n\\n                          var startBody = value.indexOf('{') + 1;\\n                          var endBody = value.lastIndexOf('}');\\n                          var startArgs = value.indexOf('(') + 1;\\n                          var endArgs = value.indexOf(')');\\n      \\n                          return new Function(value.substring(startArgs, endArgs)\\n                                            , value.substring(startBody, endBody));\\n                      }\\n                      return value;\\n                  });\\n              }\\n      \\n              function toString (obj) {\\n                  var result = JSON.stringify(obj, function (key, val) {\\n                    if (typeof val === 'function') {\\n                      return val.toString();\\n                    }\\n                    return val;\\n                  });\\n      \\n                  return result;\\n              };\\n      \\n              window.onresize = function() {\\n                  chart.resize();\\n              };\\n      \\n              function processMessage (e) {\\n                var req = parse(e.data);\\n      \\n                switch(req.types) {\\n                  case \\\"SET_OPTION\\\":\\n                    chart.setOption(req.payload.option, req.payload.notMerge,req.payload.lazyUpate);\\n                    break;\\n                  case \\\"CLEAR\\\":\\n                    chart.clear();\\n                    break;\\n                  case \\\"SET_BACKGROUND_COLOR\\\":\\n                    setBackgroundColor(req.color);\\n                    break;\\n                  case \\\"GET_OPTION\\\":\\n                    var option = chart.getOption();\\n                    var data = {};\\n    \\n                    if(req.properties !== undefined) {\\n                        req.properties.forEach(function (prop) {\\n                          data[prop] = option[prop];\\n                        });\\n                    } else {\\n                        var data = {\\n                            option: option\\n                         };\\n                    }\\n    \\n                    sendCallbackData(req.uuid, data);\\n                    break;\\n                  default:\\n                    break;\\n                }\\n              }\\n      \\n              window.document.addEventListener('message', function(e) {\\n                processMessage(e);\\n              });\\n    \\n              window.addEventListener('message', function(e) {\\n                processMessage(e);\\n              });\\n\\n              \" + props.additionalCode + \"\\n        \";\n  };\n\n  exports.getJavascriptSource = getJavascriptSource;\n});","lineCount":41,"map":[[7,0,1,0],[9,0,3,7],[9,6,3,13,"convertToPostMessageString"],[9,32,3,39],[9,35,3,42],[9,44,3,13,"convertToPostMessageString"],[9,70,3,42],[9,71,3,42,"obj"],[9,74,3,45],[9,76,3,49],[10,0,4,2],[10,11,4,9,"JSON"],[10,15,4,13],[10,16,4,14,"stringify"],[10,25,4,9],[10,26,4,24,"obj"],[10,29,4,9],[10,31,4,29],[10,41,4,30,"key"],[10,44,4,29],[10,46,4,35,"val"],[10,49,4,29],[10,51,4,43],[11,0,5,4],[11,10,5,8],[11,17,5,15,"val"],[11,20,5,8],[11,25,5,23],[11,35,5,4],[11,37,5,35],[12,0,6,6],[12,15,6,13],[12,19,6,17,"Function"],[12,27,6,13],[12,28,6,26],[12,40,6,38,"val"],[12,43,6,41],[12,44,6,42,"toString"],[12,52,6,38],[12,54,6,13],[12,55,6,6],[13,0,7,5],[15,0,8,4],[15,13,8,11,"val"],[15,16,8,4],[16,0,9,3],[16,5,4,9],[16,6,4,2],[17,0,10,1],[17,3,3,7],[21,0,12,7],[21,6,12,13,"toString"],[21,14,12,21],[21,17,12,24],[21,26,12,13,"toString"],[21,34,12,24],[21,35,12,24,"obj"],[21,38,12,27],[21,40,12,31],[22,0,13,2],[22,8,13,6,"obj"],[22,11,13,9],[22,16,13,14,"undefined"],[22,25,13,2],[22,27,13,25],[22,34,13,32,"JSON"],[22,38,13,36],[22,39,13,37,"stringify"],[22,48,13,32],[22,49,13,47],[22,51,13,32],[22,52,13,25],[23,0,15,2],[23,11,15,9,"JSON"],[23,15,15,13],[23,16,15,14,"stringify"],[23,25,15,9],[23,26,15,24,"obj"],[23,29,15,9],[23,31,15,29],[23,41,15,30,"key"],[23,44,15,29],[23,46,15,35,"val"],[23,49,15,29],[23,51,15,43],[24,0,16,4],[24,10,16,8],[24,17,16,15,"val"],[24,20,16,8],[24,25,16,23],[24,35,16,4],[24,37,16,35],[25,0,17,6],[25,15,17,13,"val"],[25,18,17,16],[25,19,17,17,"toString"],[25,27,17,13],[25,29,17,6],[26,0,18,5],[28,0,19,4],[28,13,19,11,"val"],[28,16,19,4],[29,0,20,3],[29,5,15,9],[29,6,15,2],[30,0,21,1],[30,3,12,7],[34,0,23,7],[34,6,23,13,"getJavascriptSource"],[34,25,23,32],[34,28,23,35],[34,37,23,13,"getJavascriptSource"],[34,56,23,35],[34,57,23,35,"props"],[34,62,23,40],[34,64,23,44],[35,0,23,44],[35,8,24,10,"OS"],[35,10,23,44],[35,13,24,17,"Platform"],[35,34,23,44],[35,35,24,10,"OS"],[35,37,23,44],[36,0,25,2],[36,8,25,8,"renderer"],[36,16,25,16],[36,19,25,19],[36,27,25,2],[37,0,27,2],[37,112,28,96,"renderer"],[37,120,27,2],[37,180,29,48,"encodeURI"],[37,189,29,57],[37,190,30,14,"toString"],[37,198,30,22],[37,199,30,23,"props"],[37,204,30,28],[37,205,30,29,"option"],[37,211,30,22],[37,212,29,57],[37,213,27,2],[37,263,32,35,"props"],[37,268,32,40],[37,269,32,41,"backgroundColor"],[37,284,27,2],[37,910,47,27,"OS"],[37,912,27,2],[37,3731,126,16,"props"],[37,3736,126,21],[37,3737,126,22,"additionalCode"],[37,3751,27,2],[38,0,128,1],[38,3,23,7]],"functionMap":{"names":["<global>","convertToPostMessageString","JSON.stringify$argument_1","toString","getJavascriptSource"],"mappings":"AAA;0CCE;6BCC;GDK;CDC;wBGE;6BDG;GCK;CHC;mCIE;CJyG"}},"type":"js/module"}]}