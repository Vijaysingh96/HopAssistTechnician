{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/assertThisInitialized","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"./utils","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"react-native/Libraries/Utilities/dismissKeyboard","data":{"isAsync":false}},{"name":"./ViewPagerNativeComponent","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/extends\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/assertThisInitialized\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _utils = _$$_REQUIRE(_dependencyMap[8], \"./utils\");\n\n  var _jsxFileName = \"/home/groofl/VijaySingh/HopAssistTechnician/node_modules/@react-native-community/viewpager/js/ViewPager.js\";\n\n  var React = _$$_REQUIRE(_dependencyMap[9], \"react\");\n\n  var ReactNative = _$$_REQUIRE(_dependencyMap[10], \"react-native\");\n\n  var Platform = ReactNative.Platform,\n      UIManager = ReactNative.UIManager;\n\n  var dismissKeyboard = _$$_REQUIRE(_dependencyMap[11], \"react-native/Libraries/Utilities/dismissKeyboard\");\n\n  var NativeViewPager = _$$_REQUIRE(_dependencyMap[12], \"./ViewPagerNativeComponent\");\n\n  var VIEW_PAGER_REF = 'viewPager';\n  var VIEW_MANAGER_NAME = 'RNCViewPager';\n\n  function getViewManagerConfig(viewManagerName) {\n    if (!UIManager.getViewManagerConfig) {\n      return UIManager[viewManagerName];\n    }\n\n    return UIManager.getViewManagerConfig(viewManagerName);\n  }\n\n  var ViewPager = function (_React$Component) {\n    (0, _inherits2.default)(ViewPager, _React$Component);\n\n    function ViewPager() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      (0, _classCallCheck2.default)(this, ViewPager);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(ViewPager)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      _this.isScrolling = false;\n\n      _this.getInnerViewNode = function () {\n        return _this.refs[VIEW_PAGER_REF].getInnerViewNode();\n      };\n\n      _this._onPageScroll = function (e) {\n        if (_this.props.onPageScroll) {\n          _this.props.onPageScroll(e);\n        }\n\n        if (\"android\" === 'android') {\n          if (_this.props.keyboardDismissMode === 'on-drag') {\n            dismissKeyboard();\n          }\n        }\n      };\n\n      _this._onPageScrollStateChanged = function (e) {\n        if (_this.props.onPageScrollStateChanged) {\n          _this.props.onPageScrollStateChanged(e);\n        }\n\n        _this.isScrolling = e.nativeEvent.pageScrollState === 'dragging';\n      };\n\n      _this._onPageSelected = function (e) {\n        if (_this.props.onPageSelected) {\n          _this.props.onPageSelected(e);\n        }\n      };\n\n      _this.setPage = function (selectedPage) {\n        UIManager.dispatchViewManagerCommand(ReactNative.findNodeHandle((0, _assertThisInitialized2.default)(_this)), getViewManagerConfig(VIEW_MANAGER_NAME).Commands.setPage, [selectedPage]);\n      };\n\n      _this.setPageWithoutAnimation = function (selectedPage) {\n        UIManager.dispatchViewManagerCommand(ReactNative.findNodeHandle((0, _assertThisInitialized2.default)(_this)), getViewManagerConfig(VIEW_MANAGER_NAME).Commands.setPageWithoutAnimation, [selectedPage]);\n      };\n\n      _this.setScrollEnabled = function (scrollEnabled) {\n        UIManager.dispatchViewManagerCommand(ReactNative.findNodeHandle((0, _assertThisInitialized2.default)(_this)), getViewManagerConfig(VIEW_MANAGER_NAME).Commands.setScrollEnabled, [scrollEnabled]);\n      };\n\n      _this._onMoveShouldSetResponderCapture = function () {\n        if (\"android\" === 'ios') {\n          return _this.isScrolling;\n        }\n\n        return false;\n      };\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(ViewPager, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        if (\"android\" === 'android') {\n          if (this.props.initialPage != null) {\n            this.setPageWithoutAnimation(this.props.initialPage);\n          }\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        return React.createElement(NativeViewPager, (0, _extends2.default)({}, this.props, {\n          ref: VIEW_PAGER_REF,\n          style: this.props.style,\n          onPageScroll: this._onPageScroll,\n          onPageScrollStateChanged: this._onPageScrollStateChanged,\n          onPageSelected: this._onPageSelected,\n          onMoveShouldSetResponderCapture: this._onMoveShouldSetResponderCapture,\n          children: (0, _utils.childrenWithOverriddenStyle)(this.props.children),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          }\n        }));\n      }\n    }]);\n    return ViewPager;\n  }(React.Component);\n\n  module.exports = ViewPager;\n});","lineCount":147,"map":[[2,0,11,0],[20,0,27,0],[24,0,20,0],[24,6,20,6,"React"],[24,11,20,11],[24,14,20,14,"require"],[24,25,20,21],[24,53,20,0],[26,0,21,0],[26,6,21,6,"ReactNative"],[26,17,21,17],[26,20,21,20,"require"],[26,31,21,27],[26,67,21,0],[28,6,23,7,"Platform"],[28,14],[28,17,23,30,"ReactNative"],[28,28],[28,29,23,7,"Platform"],[28,37],[29,6,23,17,"UIManager"],[29,15],[29,18,23,30,"ReactNative"],[29,29],[29,30,23,17,"UIManager"],[29,39],[31,0,25,0],[31,6,25,6,"dismissKeyboard"],[31,21,25,21],[31,24,25,24,"require"],[31,35,25,31],[31,107,25,0],[33,0,29,0],[33,6,29,6,"NativeViewPager"],[33,21,29,21],[33,24,29,24,"require"],[33,35,29,31],[33,85,29,0],[35,0,31,0],[35,6,31,6,"VIEW_PAGER_REF"],[35,20,31,20],[35,23,31,23],[35,34,31,0],[36,0,32,0],[36,6,32,6,"VIEW_MANAGER_NAME"],[36,23,32,23],[36,26,32,26],[36,40,32,0],[38,0,34,0],[38,11,34,9,"getViewManagerConfig"],[38,31,34,0],[38,32,34,30,"viewManagerName"],[38,47,34,0],[38,49,34,47],[39,0,35,2],[39,8,35,6],[39,9,35,7,"UIManager"],[39,18,35,16],[39,19,35,17,"getViewManagerConfig"],[39,39,35,2],[39,41,35,39],[40,0,38,4],[40,13,38,11,"UIManager"],[40,22,38,20],[40,23,38,21,"viewManagerName"],[40,38,38,20],[40,39,38,4],[41,0,39,3],[43,0,40,2],[43,11,40,9,"UIManager"],[43,20,40,18],[43,21,40,19,"getViewManagerConfig"],[43,41,40,9],[43,42,40,40,"viewManagerName"],[43,57,40,9],[43,58,40,2],[44,0,41,1],[46,6,85,6,"ViewPager"],[46,15],[61,12,86,2,"isScrolling"],[61,23],[61,26,86,16],[61,31],[63,12,99,2,"getInnerViewNode"],[63,28],[63,31,99,21],[63,43,99,43],[64,0,100,4],[64,15,100,11],[64,21,100,16,"refs"],[64,25,100,11],[64,26,100,21,"VIEW_PAGER_REF"],[64,40,100,11],[64,42,100,37,"getInnerViewNode"],[64,58,100,11],[64,60,100,4],[65,0,101,3],[65,7],[67,12,103,2,"_onPageScroll"],[67,25],[67,28,103,18],[67,38,103,19,"e"],[67,39,103,18],[67,41,103,42],[68,0,104,4],[68,12,104,8],[68,18,104,13,"props"],[68,23,104,8],[68,24,104,19,"onPageScroll"],[68,36,104,4],[68,38,104,33],[69,0,105,6],[69,16,105,11,"props"],[69,21,105,6],[69,22,105,17,"onPageScroll"],[69,34,105,6],[69,35,105,30,"e"],[69,36,105,6],[70,0,106,5],[72,0,108,4],[72,12,108,8],[72,26,108,24],[72,35,108,4],[72,37,108,35],[73,0,109,6],[73,14,109,10],[73,20,109,15,"props"],[73,25,109,10],[73,26,109,21,"keyboardDismissMode"],[73,45,109,10],[73,50,109,45],[73,59,109,6],[73,61,109,56],[74,0,110,8,"dismissKeyboard"],[74,12,110,8,"dismissKeyboard"],[74,27,110,23],[75,0,111,7],[76,0,112,5],[77,0,113,3],[77,7],[79,12,115,2,"_onPageScrollStateChanged"],[79,37],[79,40,115,30],[79,50,115,31,"e"],[79,51,115,30],[79,53,115,66],[80,0,116,4],[80,12,116,8],[80,18,116,13,"props"],[80,23,116,8],[80,24,116,19,"onPageScrollStateChanged"],[80,48,116,4],[80,50,116,45],[81,0,117,6],[81,16,117,11,"props"],[81,21,117,6],[81,22,117,17,"onPageScrollStateChanged"],[81,46,117,6],[81,47,117,42,"e"],[81,48,117,6],[82,0,118,5],[84,0,119,4],[84,14,119,9,"isScrolling"],[84,25,119,4],[84,28,119,23,"e"],[84,29,119,24],[84,30,119,25,"nativeEvent"],[84,41,119,23],[84,42,119,37,"pageScrollState"],[84,57,119,23],[84,62,119,57],[84,72,119,4],[85,0,120,3],[85,7],[87,12,122,2,"_onPageSelected"],[87,27],[87,30,122,20],[87,40,122,21,"e"],[87,41,122,20],[87,43,122,46],[88,0,123,4],[88,12,123,8],[88,18,123,13,"props"],[88,23,123,8],[88,24,123,19,"onPageSelected"],[88,38,123,4],[88,40,123,35],[89,0,124,6],[89,16,124,11,"props"],[89,21,124,6],[89,22,124,17,"onPageSelected"],[89,36,124,6],[89,37,124,32,"e"],[89,38,124,6],[90,0,125,5],[91,0,126,3],[91,7],[93,12,132,2,"setPage"],[93,19],[93,22,132,12],[93,32,132,13,"selectedPage"],[93,44,132,12],[93,46,132,38],[94,0,133,4,"UIManager"],[94,8,133,4,"UIManager"],[94,17,133,13],[94,18,133,14,"dispatchViewManagerCommand"],[94,44,133,4],[94,45,134,6,"ReactNative"],[94,56,134,17],[94,57,134,18,"findNodeHandle"],[94,71,134,6],[94,116,133,4],[94,118,135,6,"getViewManagerConfig"],[94,138,135,26],[94,139,135,27,"VIEW_MANAGER_NAME"],[94,156,135,26],[94,157,135,6],[94,158,135,46,"Commands"],[94,166,135,6],[94,167,135,55,"setPage"],[94,174,133,4],[94,176,136,6],[94,177,136,7,"selectedPage"],[94,189,136,6],[94,190,133,4],[95,0,138,3],[95,7],[97,12,144,2,"setPageWithoutAnimation"],[97,35],[97,38,144,28],[97,48,144,29,"selectedPage"],[97,60,144,28],[97,62,144,54],[98,0,145,4,"UIManager"],[98,8,145,4,"UIManager"],[98,17,145,13],[98,18,145,14,"dispatchViewManagerCommand"],[98,44,145,4],[98,45,146,6,"ReactNative"],[98,56,146,17],[98,57,146,18,"findNodeHandle"],[98,71,146,6],[98,116,145,4],[98,118,147,6,"getViewManagerConfig"],[98,138,147,26],[98,139,147,27,"VIEW_MANAGER_NAME"],[98,156,147,26],[98,157,147,6],[98,158,147,46,"Commands"],[98,166,147,6],[98,167,147,55,"setPageWithoutAnimation"],[98,190,145,4],[98,192,148,6],[98,193,148,7,"selectedPage"],[98,205,148,6],[98,206,145,4],[99,0,150,3],[99,7],[101,12,157,2,"setScrollEnabled"],[101,28],[101,31,157,21],[101,41,157,22,"scrollEnabled"],[101,54,157,21],[101,56,157,49],[102,0,158,4,"UIManager"],[102,8,158,4,"UIManager"],[102,17,158,13],[102,18,158,14,"dispatchViewManagerCommand"],[102,44,158,4],[102,45,159,6,"ReactNative"],[102,56,159,17],[102,57,159,18,"findNodeHandle"],[102,71,159,6],[102,116,158,4],[102,118,160,6,"getViewManagerConfig"],[102,138,160,26],[102,139,160,27,"VIEW_MANAGER_NAME"],[102,156,160,26],[102,157,160,6],[102,158,160,46,"Commands"],[102,166,160,6],[102,167,160,55,"setScrollEnabled"],[102,183,158,4],[102,185,161,6],[102,186,161,7,"scrollEnabled"],[102,199,161,6],[102,200,158,4],[103,0,163,3],[103,7],[105,12,165,2,"_onMoveShouldSetResponderCapture"],[105,44],[105,47,165,37],[105,59,165,43],[106,0,166,4],[106,12,166,8],[106,26,166,24],[106,31,166,4],[106,33,166,31],[107,0,167,6],[107,17,167,13],[107,23,167,18,"isScrolling"],[107,34,167,6],[108,0,168,5],[110,0,169,4],[110,15,169,11],[110,20,169,4],[111,0,170,3],[111,7],[118,42,88,22],[119,0,90,4],[119,12,90,8],[119,26,90,24],[119,35,90,4],[119,37,90,35],[120,0,91,6],[120,14,91,10],[120,19,91,15,"props"],[120,24,91,10],[120,25,91,21,"initialPage"],[120,36,91,10],[120,40,91,36],[120,44,91,6],[120,46,91,42],[121,0,92,8],[121,17,92,13,"setPageWithoutAnimation"],[121,40,92,8],[121,41,92,37],[121,46,92,42,"props"],[121,51,92,37],[121,52,92,48,"initialPage"],[121,63,92,8],[122,0,93,7],[123,0,94,5],[124,0,95,3],[127,31,172,11],[128,0,173,4],[128,15,174,6],[128,35,174,7],[128,50,174,6],[128,79,175,12],[128,84,175,17,"props"],[128,89,174,6],[129,0,176,8],[129,10,176,8],[129,13,176,11],[129,15,176,13,"VIEW_PAGER_REF"],[129,29,174,6],[130,0,177,8],[130,10,177,8],[130,15,177,13],[130,17,177,15],[130,22,177,20,"props"],[130,27,177,15],[130,28,177,26,"style"],[130,33,174,6],[131,0,178,8],[131,10,178,8],[131,22,178,20],[131,24,178,22],[131,29,178,27,"_onPageScroll"],[131,42,174,6],[132,0,179,8],[132,10,179,8],[132,34,179,32],[132,36,179,34],[132,41,179,39,"_onPageScrollStateChanged"],[132,66,174,6],[133,0,180,8],[133,10,180,8],[133,24,180,22],[133,26,180,24],[133,31,180,29,"_onPageSelected"],[133,46,174,6],[134,0,181,8],[134,10,181,8],[134,41,181,39],[134,43,181,41],[134,48,181,46,"_onMoveShouldSetResponderCapture"],[134,80,174,6],[135,0,182,8],[135,10,182,8],[135,18,182,16],[135,20,182,18],[135,60,182,46],[135,65,182,51,"props"],[135,70,182,46],[135,71,182,57,"children"],[135,79,182,18],[135,80,174,6],[136,0,174,6],[137,0,174,6],[138,0,174,6],[139,0,174,6],[140,0,174,6],[140,11,173,4],[141,0,185,3],[144,4,85,24,"React"],[144,9,85,29],[144,10,85,30,"Component"],[144,19],[146,0,188,0,"module"],[146,2,188,0,"module"],[146,8,188,6],[146,9,188,7,"exports"],[146,16,188,0],[146,19,188,17,"ViewPager"],[146,28,188,0]],"functionMap":{"names":["<global>","getViewManagerConfig","ViewPager","componentDidMount","getInnerViewNode","_onPageScroll","_onPageScrollStateChanged","_onPageSelected","setPage","setPageWithoutAnimation","setScrollEnabled","_onMoveShouldSetResponderCapture","render"],"mappings":"AAA;ACiC;CDO;AE4C;ECG;GDO;qBEI;GFE;kBGE;GHU;8BIE;GJK;oBKE;GLI;YMM;GNM;4BOM;GPM;qBQO;GRM;qCSE;GTK;EUE;GVa;CFC"}},"type":"js/module"}]}